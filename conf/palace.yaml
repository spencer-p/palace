apiVersion: apps/v1
kind: Deployment
metadata:
  name: palace
  namespace: palace
  labels:
    app: palace
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: palace
  template:
    metadata:
      labels:
        app: palace
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      volumes:
      - name: palace-data
        persistentVolumeClaim:
          claimName: palace-pvc
          readOnly: false
      containers:
      - name: palace
        image: ko://github.com/spencer-p/palace
        ports:
        - containerPort: 6844
        env:
        - name: TZ
          value: "America/Los_Angeles"
        - name: PATH_PREFIX
          value: /palace
        - name: DB_FILE
          value: /var/lib/palace/data/db.sqlite
        - name: AUTH_SALT
          valueFrom:
            secretKeyRef:
              name: palace-auth
              key: AUTH_SALT
        - name: AUTH_BLOCK_KEY
          valueFrom:
            secretKeyRef:
              name: palace-auth
              key: AUTH_BLOCK_KEY
        - name: AUTH_HASH_KEY
          valueFrom:
            secretKeyRef:
              name: palace-auth
              key: AUTH_HASH_KEY
        - name: AUTH_API_KEYS
          valueFrom:
            secretKeyRef:
              name: palace-auth
              key: AUTH_API_KEYS
        - name: MY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: palace-auth
              key: MY_PASSWORD
        livenessProbe:
          httpGet:
            path: "/login"
            port: 6844
          periodSeconds: 21600  # 60 * 60 * 6 = 6 hours
        volumeMounts:
        - name: palace-data
          mountPath: /var/lib/palace/data
          readOnly: false
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: palace
  namespace: palace
  annotations:
    traefik.ingress.kubernetes.io/rule-type: PathPrefixStrip
spec:
  rules:
  - host: icebox.spencerjp.dev
    http:
      paths:
      - path: /palace/
        pathType: Prefix
        backend:
          service:
            name: palace
            port:
              number: 6844
---
apiVersion: v1
kind: Service
metadata:
  name: palace
  namespace: palace
  labels:
    app: palace
spec:
  selector:
    app: palace
  ports:
    - protocol: TCP
      name: http
      port: 6844
      targetPort: 6844
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: palace-volume
  namespace: palace
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /var/lib/palace/data
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - icebox
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: palace-pvc
  namespace: palace
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 0.5Gi
  storageClassName: "local-storage"
  volumeName: palace-volume

